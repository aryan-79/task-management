services:
  postgres:
    image: postgres:17-alpine  # 17 is very new, 16 is more stable
    container_name: task-management-postgres
    environment:
      POSTGRES_DB: task-management
      POSTGRES_USER: aryan
      POSTGRES_PASSWORD: aryan79  # Use environment variable for security
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aryan -d task-management"]
      interval: 10s  # Shorter interval for development
      timeout: 5s    # Shorter timeout
      retries: 5
      start_period: 10s
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-management-backend
    env_file:
      - ./backend/.env
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    restart: unless-stopped  # Add restart policy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-management-frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres-data:
